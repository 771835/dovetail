from __future__ import annotations
from typing import Protocol

from mcfdsl.core.types import ScopeType

class IScope(Protocol):
    name: str

    def get_name(self) -> str: ...
    def get_file_path(self) -> str: ...
    def get_minecraft_function_path(self) -> str: ...
    def get_unique_name(self) -> str: ...
    def create_child(self, name: str, scope_type: ScopeType) -> IScope: ...
    def add_symbol(self, symbol: ISymbol) -> None: ...
    def set_symbol(self, symbol: ISymbol) -> None: ...
    def resolve_symbol(self, name: str) -> ISymbol: ...
    def resolve_scope(self, name: str) -> IScope: ...
    def get_parent(self) -> IScope: ...
    def is_exist_parent(self): ...


class ISymbol(Protocol):
    name: str

    def get_unique_name(self, scope: IScope) -> str: ...

